@use '~sass-mq/mq' as mq;

.o-grid {
  @include u-grid(4, $padding-s);
  grid-row-gap: rem(42px, 14px);

  @include mq.mq($from: tablet) {
    @include u-grid(12, $padding-m);
    grid-row-gap: rem(32px, 12px);
  }
  @include mq.mq($from: desktop) {
    @include u-grid(12, $padding-l);
    grid-row-gap: rem(42px, 15px);
  }
  @include mq.mq($from: wide) {
    @include u-grid(12, $padding-l);
    grid-row-gap: rem(42px);
  }

  &:not(.o-grid.-flush) {
    margin-bottom: rem(50px);
  }
  &.-dense {
    grid-auto-flow: dense;
  }

  &_cell {
    grid-column: 1 / 13;

    &.-sidebar {
      @media (min-width: 37.5em) {
        grid-column: 1 / 8;
      }
    }
    &.-wide {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      grid-gap: inherit;
      grid-column: 1 / -1;

      @include mq.mq($from: tablet) {
        grid-template-columns: repeat(10, 1fr);
        grid-column: 2 / 12;
      }
      @include mq.mq($from: desktop) {
        grid-template-columns: repeat(8, 1fr);
        grid-column: 2 / 12;
      }
    }
    &.-content {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      grid-gap: inherit;
      grid-column: 1 / -1;

      @include mq.mq($from: tablet) {
        grid-template-columns: repeat(10, 1fr);
        grid-column: 2 / 12;
      }
      @include mq.mq($from: desktop) {
        grid-template-columns: repeat(8, 1fr);
        grid-column: 3 / 11;
      }
    }
  }
}
